{"ast":null,"code":"var _jsxFileName = \"/Users/siarradjabi/Documents/GitHub/sokar/client/src/components/UserSession.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create a context for the user session\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserSessionContext = /*#__PURE__*/createContext();\n\n// Provide the context to your components\nexport function UserSessionProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [userSession, setUserSession] = useState(null);\n  return /*#__PURE__*/_jsxDEV(UserSessionContext.Provider, {\n    value: {\n      userSession,\n      setUserSession\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n// Create a custom hook to use the user session context\n_s(UserSessionProvider, \"hqyVuJ6rv5bMYl002B9QA8V7KZY=\");\n_c = UserSessionProvider;\nexport function useUserSession() {\n  _s2();\n  return useContext(UserSessionContext);\n}\n_s2(useUserSession, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserSessionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","UserSessionContext","UserSessionProvider","_ref","_s","children","userSession","setUserSession","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserSession","_s2","$RefreshReg$"],"sources":["/Users/siarradjabi/Documents/GitHub/sokar/client/src/components/UserSession.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create a context for the user session\nconst UserSessionContext = createContext();\n\n// Provide the context to your components\nexport function UserSessionProvider({ children }) {\n    const [userSession, setUserSession] = useState(null);\n\n    return (\n        <UserSessionContext.Provider value={{ userSession, setUserSession }}>\n            {children}\n        </UserSessionContext.Provider>\n    );\n}\n\n// Create a custom hook to use the user session context\nexport function useUserSession() {\n    return useContext(UserSessionContext);\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,SAASM,mBAAmBA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC5C,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpD,oBACIE,OAAA,CAACC,kBAAkB,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,WAAW;MAAEC;IAAe,CAAE;IAAAF,QAAA,EAC/DA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEtC;;AAEA;AAAAT,EAAA,CAVgBF,mBAAmB;AAAAY,EAAA,GAAnBZ,mBAAmB;AAWnC,OAAO,SAASa,cAAcA,CAAA,EAAG;EAAAC,GAAA;EAC7B,OAAOnB,UAAU,CAACI,kBAAkB,CAAC;AACzC;AAACe,GAAA,CAFeD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}