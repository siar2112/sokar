{"ast":null,"code":"var _jsxFileName = \"/Users/siarradjabi/Documents/GitHub/sokar/client/src/components/TeamMemberPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamMemberPage = () => {\n  _s();\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [teamGames, setTeamGames] = useState([]);\n  const [teamInfo, setTeamInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // Add error state variable\n  let {\n    teamID\n  } = useParams();\n  useEffect(() => {\n    const getAllTeamMembers = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/getAllTeamMembers', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            teamID: teamID\n          }),\n          credentials: 'include'\n        });\n        if (!response.ok) throw new Error('Error fetching team members');\n        const data = await response.json();\n        setTeamMembers(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    const getTeamGames = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/getTeamGames', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            teamID: teamID\n          }),\n          credentials: 'include'\n        });\n        if (!response.ok) throw new Error('Error fetching team games');\n        const data = await response.json();\n        setTeamGames(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    const getTeamInfo = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/getTeamInfo', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            teamID: teamID\n          }),\n          credentials: 'include'\n        });\n        if (!response.ok) throw new Error('Error fetching team info');\n        const data = await response.json();\n        setTeamInfo(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    Promise.all([getAllTeamMembers(), getTeamGames(), getTeamInfo()]).then(() => setLoading(false)).catch(error => setError(error.message));\n  }, [teamID]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this); // Display error message if there's an error\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: teamInfo ? teamInfo[0].Name : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: teamInfo ? teamInfo[0].Team_Value : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(TeamMemberPage, \"ByYrVQ+er1W0Ov6/4orQZ/CeKuo=\", false, function () {\n  return [useParams];\n});\n_c = TeamMemberPage;\nexport default TeamMemberPage;\nvar _c;\n$RefreshReg$(_c, \"TeamMemberPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","TeamMemberPage","_s","teamMembers","setTeamMembers","teamGames","setTeamGames","teamInfo","setTeamInfo","loading","setLoading","error","setError","teamID","getAllTeamMembers","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","data","json","message","getTeamGames","getTeamInfo","Promise","all","then","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","Name","Team_Value","_c","$RefreshReg$"],"sources":["/Users/siarradjabi/Documents/GitHub/sokar/client/src/components/TeamMemberPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst TeamMemberPage = () => {\n    const [teamMembers, setTeamMembers] = useState([]);\n    const [teamGames, setTeamGames] = useState([]);\n    const [teamInfo, setTeamInfo] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null); // Add error state variable\n    let { teamID } = useParams();\n\n    useEffect(() => {\n        const getAllTeamMembers = async () => {\n            try {\n                const response = await fetch('http://localhost:9000/getAllTeamMembers', {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ teamID: teamID }),\n                    credentials: 'include',\n                });\n                if (!response.ok) throw new Error('Error fetching team members');\n                const data = await response.json();\n                setTeamMembers(data);\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        const getTeamGames = async () => {\n            try {\n                const response = await fetch('http://localhost:9000/getTeamGames', {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ teamID: teamID }),\n                    credentials: 'include',\n                });\n                if (!response.ok) throw new Error('Error fetching team games');\n                const data = await response.json();\n                setTeamGames(data);\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        const getTeamInfo = async () => {\n            try {\n                const response = await fetch('http://localhost:9000/getTeamInfo', {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ teamID: teamID }),\n                    credentials: 'include',\n                });\n                if (!response.ok) throw new Error('Error fetching team info');\n                const data = await response.json();\n                setTeamInfo(data);\n            } catch (error) {\n                setError(error.message);\n            }\n        };\n\n        Promise.all([getAllTeamMembers(), getTeamGames(), getTeamInfo()])\n            .then(() => setLoading(false))\n            .catch((error) => setError(error.message));\n    }, [teamID]);\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    if (error) {\n        return <p>Error: {error}</p>; // Display error message if there's an error\n    }\n\n    return (\n        <div>\n            <h1 style={{textAlign:\"center\"}}>{teamInfo ? teamInfo[0].Name : \"\"}</h1>\n            <h2 style={{textAlign:\"center\"}}>{teamInfo ? teamInfo[0].Team_Value : \"\"}</h2>\n            {/* Add components to display teamMembers and teamGames here */}\n        </div>\n    );\n};\n\nexport default TeamMemberPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}