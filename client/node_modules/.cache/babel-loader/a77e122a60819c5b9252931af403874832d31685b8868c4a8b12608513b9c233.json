{"ast":null,"code":"var _jsxFileName = \"/Users/siarradjabi/Documents/GitHub/sokar/client/src/components/TeamMemberPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeamMemberPage = () => {\n  _s();\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [teamGames, setTeamGames] = useState([]);\n  const [teamInfo, setTeamInfo] = useState(null);\n  let {\n    teamID\n  } = useParams();\n  useEffect(() => {\n    const getAllTeamMembers = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/getAllTeamMembers', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            teamID: teamID\n          }),\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTeamMembers(data);\n        } else {\n          throw new Error('An unexpected error occurred');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const getTeamGames = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/getTeamGames', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            teamID: teamID\n          }),\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTeamGames(data);\n        } else {\n          throw new Error('An unexpected error occurred');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const getTeamInfo = async () => {\n      try {\n        const response = await fetch('http://localhost:9000/getTeamInfo', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            teamID: teamID\n          }),\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTeamInfo(data);\n        } else {\n          throw new Error('An unexpected error occurred');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getTeamInfo();\n    getAllTeamMembers();\n    getTeamGames();\n  }, [teamID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: teamInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: teamInfo.Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: teamInfo.Team_Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(TeamMemberPage, \"hNvwVZQxqtGg6H6294MXsnHBh5M=\", false, function () {\n  return [useParams];\n});\n_c = TeamMemberPage;\nexport default TeamMemberPage;\nvar _c;\n$RefreshReg$(_c, \"TeamMemberPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamMemberPage","_s","teamMembers","setTeamMembers","teamGames","setTeamGames","teamInfo","setTeamInfo","teamID","getAllTeamMembers","response","fetch","method","headers","body","JSON","stringify","credentials","ok","data","json","Error","error","console","getTeamGames","getTeamInfo","children","style","textAlign","Name","fileName","_jsxFileName","lineNumber","columnNumber","Team_Value","_c","$RefreshReg$"],"sources":["/Users/siarradjabi/Documents/GitHub/sokar/client/src/components/TeamMemberPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst TeamMemberPage = () => {\n    const [teamMembers, setTeamMembers] = useState([]);\n    const [teamGames, setTeamGames] = useState([]);\n    const [teamInfo, setTeamInfo] = useState(null);\n    let { teamID } = useParams();\n\n    useEffect(() => {\n        const getAllTeamMembers = async () => {\n            try {\n                const response = await fetch('http://localhost:9000/getAllTeamMembers', {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ teamID: teamID }),\n                    credentials: 'include',\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    setTeamMembers(data);\n                } else {\n                    throw new Error('An unexpected error occurred');\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        const getTeamGames = async () => {\n            try {\n                const response = await fetch('http://localhost:9000/getTeamGames', {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ teamID: teamID }),\n                    credentials: 'include',\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    setTeamGames(data);\n                } else {\n                    throw new Error('An unexpected error occurred');\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        const getTeamInfo = async () => {\n            try {\n                const response = await fetch('http://localhost:9000/getTeamInfo', {\n                    method: 'post',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ teamID: teamID }),\n                    credentials: 'include',\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    setTeamInfo(data);\n                } else {\n                    throw new Error('An unexpected error occurred');\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        getTeamInfo();\n        getAllTeamMembers();\n        getTeamGames();\n    }, [teamID]);\n\n\n    return (\n        <div>\n            {teamInfo ? (\n                <>\n                    <h1 style={{textAlign:\"center\"}}>{teamInfo.Name}</h1>\n                    <h2 style={{textAlign:\"center\"}}>{teamInfo.Team_Value}</h2>\n                </>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    );\n};\n\nexport default TeamMemberPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}